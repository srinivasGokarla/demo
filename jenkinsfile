pipeline {
    agent any

    tools {
        nodejs "NodeJS-20" // Must match the name in Jenkins -> Global Tool Configuration
    }

    environment {
        PATH = "${tool 'NodeJS-20'}/bin:${env.PATH}" // updated
        REACT_APP_FIREBASE_API_KEY = credentials('REACT_APP_FIREBASE_API_KEY')
        REACT_APP_FIREBASE_AUTH_DOMAIN = credentials('REACT_APP_FIREBASE_AUTH_DOMAIN')
        REACT_APP_FIREBASE_PROJECT_ID = credentials('REACT_APP_FIREBASE_PROJECT_ID')
        REACT_APP_FIREBASE_STORAGE_BUCKET = credentials('REACT_APP_FIREBASE_STORAGE_BUCKET')
        REACT_APP_FIREBASE_MESSAGING_SENDER_ID = credentials('REACT_APP_FIREBASE_MESSAGING_SENDER_ID')
        REACT_APP_FIREBASE_APP_ID = credentials('REACT_APP_FIREBASE_APP_ID')
        FIREBASE_TOKEN = credentials('FIREBASE_TOKEN')
        TEST_BASE_URL = 'http://localhost:3000'
        CI = 'true'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/srinivasGokarla/demo.git'
            }
        }

        stage('Install dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Install Playwright Browsers') {
            steps {
                bat 'npx playwright install'
            }
        }

        stage('Run Tests (Playwright + Cucumber)') {
            steps {
                bat 'npm test || exit /b 1'
            }
        }

        stage('Build React App') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                bat 'npm run build'
            }
        }

        stage('Install Firebase CLI') {
            steps {
                bat 'npm install -g firebase-tools'
            }
        }

        stage('Deploy to Firebase') {
            steps {
                bat 'firebase deploy --only hosting --token %FIREBASE_TOKEN%'
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed successfully!"
        }
        failure {
            echo "❌ Pipeline failed. Check the logs above."
        }
    }
}
